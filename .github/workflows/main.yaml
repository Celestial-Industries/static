name: Lint and Test Charts

on:
  push:
    branches:
      - main
  pull_request:

env:
  REGISTRY: ghcr.io

jobs:
  lint-test:
    runs-on: ubuntu-latest
    permissions:
      packages: read
      contents: read
      actions: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        id: Set_up_Helm
        uses: azure/setup-helm@v4
        with:
          version: 'latest'

#      - name: Install python
#        id: Install_python
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.7
#
#      - name: Set up chart-testing
#        id: Set_up_chart_testing
#        uses: helm/chart-testing-action@v2.0.1
#        with:
#          version: v3.3.0
#
#      - name: Run chart-testing (list-changed)
#        id: list-changed
#        run: |
#          changed=$(ct list-changed)
#          if [[ -n "$changed" ]]; then
#            echo "::set-output name=changed::true"
#          fi
#
#      - name: Run chart-testing (lint)
#        id: lint
#        run: ct lint

      - name: Create kind cluster
        id: Create_kind_cluster
        uses: helm/kind-action@v1.10.0
        with:
          version: v0.25.0
          config: ./kind/kind.config
          #node_image: kindest/node:v1.20.0
          cluster_name: chart-testing
          wait: 60s

      - name: Kind check version
        run: |
          kind --version

      - name: Wait for nodes to be ready
        run: |
            kubectl wait --for=condition=ready nodes --all --timeout=300s

      - name: Label nodes
        id: label_nodes
        run: |
          kubectl label nodes chart-testing-worker chart-testing-worker2 role=node

      - name: Check node labels
        id: check_labels
        run: |
          kubectl get nodes --show-labels

      - name: Lowercase org name
        run: |
          echo "ORGLC=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> "${GITHUB_ENV}"

      - name: Login to GHCR
        id: login_to_ghcr
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.ORGLC }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Image Pull Secret
        run: |
            kubectl create secret docker-registry ghcr-secret \
              --docker-server=ghcr.io \
              --docker-username=${{ env.ORGLC }} \
              --docker-password=${{ secrets.GITHUB_TOKEN }} \
              --docker-email=${{ github.actor }}@users.noreply.github.com

#      - name: Create registry secret from Docker login
#        run: |
#          kubectl create secret generic ghcr-secret \
#            --from-file=.dockerconfigjson=$HOME/.docker/config.json \
#            --type=kubernetes.io/dockerconfigjson

#      - name: Create registry secret from GH user PAT  
#        run: |
#          kubectl create secret docker-registry ghcr-secret --docker-server='ghcr.io' --docker-username='mcdermg'  --docker-password=${{ secrets.GITHUB_TOKEN }}  --docker-email='mcdermott.gearoid@gmail.com'

      - name: Patch Service Account
        run: |
            kubectl patch serviceaccount default -p '{"imagePullSecrets": [{"name": "ghcr-secret"}]}'

      - name: Helm install chart
        id: helm_install
        run: |
          helm upgrade --install static --namespace=default . -f ./values.yaml --set autoscaling.enabled=false --set replicaCount=4

      - name: Deployment check rollout
        id: check_rollout
        run: |
          kubectl rollout status deployment/static --timeout=180s

      - name: Get pods
        id: get_pods
        run: |
          kubectl get po -n default -o wide

      - uses: act10ns/slack@v2.1.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: always()
